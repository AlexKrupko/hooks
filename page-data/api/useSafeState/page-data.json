{"componentChunkName":"component---node-modules-docpocalypse-gatsby-theme-src-templates-hook-tsx","path":"/api/useSafeState","result":{"data":{"docpocalypse":{"id":"0ae9f163-ed25-50c8-a87d-becc90433a0a","tsType":{"id":"0600a0a8-21aa-55d7-9215-ec86550672c9","name":"useSafeState","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":"2434c52f-a40f-5211-83c5-d608e971b541","name":"useSafeState","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"`useSafeState` takes the return value of a `useState` hook and wraps the\nsetter to prevent updates onces the component has unmounted. Can used\nwith `useMergeState` and `useStateAsync` as well"},"typeParameter":[{"id":"e50633f2-5670-5aa9-a0ca-e0c7b3c02311","name":"TState","kind":131072,"kindString":"Type parameter","flags":{},"parent":"2434c52f-a40f-5211-83c5-d608e971b541","rootDir":"/Users/jquense/src/hooks/src","tsconfig":"/Users/jquense/src/hooks/tsconfig.json","typedocs":[],"signatures":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":null}],"parameters":[{"id":"52c323dc-711a-5b62-945f-fb8fd623ab16","name":"state","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The return value of a useStateHook\n\n```ts\nconst [show, setShow] = useSafeState(useState(true));\n```\n"},"type":{"type":"tuple","elements":[{"type":"typeParameter","name":"TState"},{"type":"reference","id":1028,"typeArguments":[{"type":"typeParameter","name":"TState"}],"name":"AsyncSetState","reference":{"id":"520e89ad-0cb4-5de0-8a4c-5a8a409d010e","name":"AsyncSetState","kind":4194304,"kindString":"Type alias","flags":{"isExported":true},"typeParameter":[{"id":"622b8f7d-31b7-5f28-b8e2-fad3a73bb688","name":"TState","kind":131072,"kindString":"Type parameter","flags":{"isExported":true},"parent":"520e89ad-0cb4-5de0-8a4c-5a8a409d010e","rootDir":"/Users/jquense/src/hooks/src","tsconfig":"/Users/jquense/src/hooks/tsconfig.json","typedocs":[],"signatures":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":null}],"type":{"type":"reflection","declaration":{"id":"0b50689f-d7ea-5777-8442-465ff4ed8653","name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExported":true},"signatures":[{"id":"5d3a3962-4a74-5ffb-98cc-453c95e0a27f","name":"__call","kind":4096,"kindString":"Call signature","flags":{"isExported":true},"parameters":[{"id":"8e28f32c-706f-5832-9762-be791923e9f3","name":"stateUpdate","kind":32768,"kindString":"Parameter","flags":{"isExported":true},"type":{"type":"reference","typeArguments":[{"type":"typeParameter","name":"TState"}],"name":"React.SetStateAction"},"parent":"5d3a3962-4a74-5ffb-98cc-453c95e0a27f","rootDir":"/Users/jquense/src/hooks/src","tsconfig":"/Users/jquense/src/hooks/tsconfig.json","typedocs":[],"signatures":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":null}],"type":{"type":"reference","typeArguments":[{"type":"typeParameter","name":"TState"}],"name":"Promise"},"parent":"0b50689f-d7ea-5777-8442-465ff4ed8653","rootDir":"/Users/jquense/src/hooks/src","tsconfig":"/Users/jquense/src/hooks/tsconfig.json","typedocs":[],"signatures":[],"typeParameter":[],"groups":[],"absolutePath":"/Users/jquense/src/hooks/src/useStateAsync.ts"}],"parent":"520e89ad-0cb4-5de0-8a4c-5a8a409d010e","rootDir":"/Users/jquense/src/hooks/src","tsconfig":"/Users/jquense/src/hooks/tsconfig.json","typedocs":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":"/Users/jquense/src/hooks/src/useStateAsync.ts"}},"parent":"a2438e51-c40f-591f-8e92-f1dfb8afeb9f","rootDir":"/Users/jquense/src/hooks/src","tsconfig":"/Users/jquense/src/hooks/tsconfig.json","typedocs":[],"signatures":[],"parameters":[],"groups":[],"absolutePath":"/Users/jquense/src/hooks/src/useStateAsync.ts"}}]},"parent":"2434c52f-a40f-5211-83c5-d608e971b541","rootDir":"/Users/jquense/src/hooks/src","tsconfig":"/Users/jquense/src/hooks/tsconfig.json","typedocs":[],"signatures":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":null,"description":{"id":"7bd711a2-501f-575a-a7a5-950194171c67","parent":"52c323dc-711a-5b62-945f-fb8fd623ab16","mdx":{"id":"3323f354-cf8a-5b35-be99-7d227a33d140","parent":"7bd711a2-501f-575a-a7a5-950194171c67","frontmatter":{"title":""},"exports":{},"rawBody":"The return value of a useStateHook\n\n```ts\nconst [show, setShow] = useSafeState(useState(true));\n```\n","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The return value of a useStateHook\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"const [show, setShow] = useSafeState(useState(true));\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"},"markdownRemark":{"id":"705f39d4-f699-5ba7-a260-058a96d27722","parent":"7bd711a2-501f-575a-a7a5-950194171c67","frontmatter":{"title":""},"excerpt":"","rawMarkdownBody":"The return value of a useStateHook\n\n```ts\nconst [show, setShow] = useSafeState(useState(true));\n```\n","html":"<p>The return value of a useStateHook</p>\n<pre><code class=\"language-ts\">const [show, setShow] = useSafeState(useState(true));\n</code></pre>"}}}],"type":{"type":"tuple","elements":[{"type":"typeParameter","name":"TState"},{"type":"reflection","declaration":{"id":"19ce37d3-d61b-59e7-b847-6515359acc49","name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":"5ec987b2-0562-5c27-92ca-97003dc176b6","name":"__call","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":"2c939a5d-a0e8-53ac-bf01-964cdfb5dee2","name":"stateUpdate","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"typeParameter","name":"TState"}],"name":"React.SetStateAction"},"parent":"5ec987b2-0562-5c27-92ca-97003dc176b6","rootDir":"/Users/jquense/src/hooks/src","tsconfig":"/Users/jquense/src/hooks/tsconfig.json","typedocs":[],"signatures":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":null}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"},"parent":"19ce37d3-d61b-59e7-b847-6515359acc49","rootDir":"/Users/jquense/src/hooks/src","tsconfig":"/Users/jquense/src/hooks/tsconfig.json","typedocs":[],"signatures":[],"typeParameter":[],"groups":[],"absolutePath":"/Users/jquense/src/hooks/src/useSafeState.ts"}],"parent":"2434c52f-a40f-5211-83c5-d608e971b541","rootDir":"/Users/jquense/src/hooks/src","tsconfig":"/Users/jquense/src/hooks/tsconfig.json","typedocs":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":"/Users/jquense/src/hooks/src/useSafeState.ts"}}]},"parent":"0600a0a8-21aa-55d7-9215-ec86550672c9","rootDir":"/Users/jquense/src/hooks/src","tsconfig":"/Users/jquense/src/hooks/tsconfig.json","typedocs":[],"signatures":[],"groups":[],"absolutePath":"/Users/jquense/src/hooks/src/useSafeState.ts","description":{"id":"563fea21-6a05-5f04-a9b2-6440dc4412af","parent":"2434c52f-a40f-5211-83c5-d608e971b541","mdx":{"id":"d2ff2ffa-5df9-55a1-9fca-7c95e1516605","parent":"563fea21-6a05-5f04-a9b2-6440dc4412af","frontmatter":{"title":""},"exports":{},"rawBody":"`useSafeState` takes the return value of a `useState` hook and wraps the\nsetter to prevent updates onces the component has unmounted. Can used\nwith `useMergeState` and `useStateAsync` as well","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useSafeState\"), \" takes the return value of a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useState\"), \" hook and wraps the\\nsetter to prevent updates onces the component has unmounted. Can used\\nwith \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useMergeState\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useStateAsync\"), \" as well\"));\n}\n;\nMDXContent.isMDXComponent = true;"},"markdownRemark":{"id":"82497214-dc18-50b0-b5b1-07a98892ee20","parent":"563fea21-6a05-5f04-a9b2-6440dc4412af","frontmatter":{"title":""},"excerpt":"","rawMarkdownBody":"`useSafeState` takes the return value of a `useState` hook and wraps the\nsetter to prevent updates onces the component has unmounted. Can used\nwith `useMergeState` and `useStateAsync` as well","html":"<p><code>useSafeState</code> takes the return value of a <code>useState</code> hook and wraps the\nsetter to prevent updates onces the component has unmounted. Can used\nwith <code>useMergeState</code> and <code>useStateAsync</code> as well</p>"}}},{"id":"8c3a21a0-4ab5-5f11-8b9e-931b80e5908d","name":"useSafeState","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":"78e1f294-990a-55f4-9a8c-2e988f731f42","name":"TState","kind":131072,"kindString":"Type parameter","flags":{},"parent":"8c3a21a0-4ab5-5f11-8b9e-931b80e5908d","rootDir":"/Users/jquense/src/hooks/src","tsconfig":"/Users/jquense/src/hooks/tsconfig.json","typedocs":[],"signatures":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":null}],"parameters":[{"id":"40a7bcea-7a88-5ddb-be3b-6cead252200f","name":"state","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"tuple","elements":[{"type":"typeParameter","name":"TState"},{"type":"reference","id":1040,"typeArguments":[{"type":"typeParameter","name":"TState"}],"name":"StateSetter","reference":{"id":"df10775a-3995-5268-8a7c-939b8c8e02ac","name":"StateSetter","kind":4194304,"kindString":"Type alias","flags":{},"typeParameter":[{"id":"25ea35e0-0f75-5661-a9a3-9031f43270cd","name":"TState","kind":131072,"kindString":"Type parameter","flags":{},"parent":"df10775a-3995-5268-8a7c-939b8c8e02ac","rootDir":"/Users/jquense/src/hooks/src","tsconfig":"/Users/jquense/src/hooks/tsconfig.json","typedocs":[],"signatures":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":null}],"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"typeParameter","name":"TState"}],"name":"SetStateAction"}],"name":"Dispatch"},"parent":"a60cfdf4-e077-5f6d-9f39-9588f59a4d53","rootDir":"/Users/jquense/src/hooks/src","tsconfig":"/Users/jquense/src/hooks/tsconfig.json","typedocs":[],"signatures":[],"parameters":[],"groups":[],"absolutePath":"/Users/jquense/src/hooks/src/useSafeState.ts"}}]},"parent":"8c3a21a0-4ab5-5f11-8b9e-931b80e5908d","rootDir":"/Users/jquense/src/hooks/src","tsconfig":"/Users/jquense/src/hooks/tsconfig.json","typedocs":[],"signatures":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":null}],"type":{"type":"tuple","elements":[{"type":"typeParameter","name":"TState"},{"type":"reference","id":1040,"typeArguments":[{"type":"typeParameter","name":"TState"}],"name":"StateSetter","reference":{"id":"df10775a-3995-5268-8a7c-939b8c8e02ac","name":"StateSetter","kind":4194304,"kindString":"Type alias","flags":{},"typeParameter":[{"id":"25ea35e0-0f75-5661-a9a3-9031f43270cd","name":"TState","kind":131072,"kindString":"Type parameter","flags":{},"parent":"df10775a-3995-5268-8a7c-939b8c8e02ac","rootDir":"/Users/jquense/src/hooks/src","tsconfig":"/Users/jquense/src/hooks/tsconfig.json","typedocs":[],"signatures":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":null}],"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"typeParameter","name":"TState"}],"name":"SetStateAction"}],"name":"Dispatch"},"parent":"a60cfdf4-e077-5f6d-9f39-9588f59a4d53","rootDir":"/Users/jquense/src/hooks/src","tsconfig":"/Users/jquense/src/hooks/tsconfig.json","typedocs":[],"signatures":[],"parameters":[],"groups":[],"absolutePath":"/Users/jquense/src/hooks/src/useSafeState.ts"}}]},"parent":"0600a0a8-21aa-55d7-9215-ec86550672c9","rootDir":"/Users/jquense/src/hooks/src","tsconfig":"/Users/jquense/src/hooks/tsconfig.json","typedocs":[],"signatures":[],"groups":[],"absolutePath":"/Users/jquense/src/hooks/src/useSafeState.ts"}],"parent":"a60cfdf4-e077-5f6d-9f39-9588f59a4d53","rootDir":"/Users/jquense/src/hooks/src","tsconfig":"/Users/jquense/src/hooks/tsconfig.json","typedocs":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":"/Users/jquense/src/hooks/src/useSafeState.ts"},"type":"hook","name":"useSafeState","packageName":"@restart/hooks","importName":"import useSafeState from '@restart/hooks/useSafeState'","tags":[{"name":"param","value":"The return value of a useStateHook\n\n```ts\nconst [show, setShow] = useSafeState(useState(true));\n```"}],"example":null,"signatures":[{"kind":"function","name":"useSafeState","description":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useSafeState\"), \" takes the return value of a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useState\"), \" hook and wraps the\\nsetter to prevent updates onces the component has unmounted. Can used\\nwith \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useMergeState\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useStateAsync\"), \" as well\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"examples":[],"type":null,"params":[{"name":"state","description":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The return value of a useStateHook\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"const [show, setShow] = useSafeState(useState(true));\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"examples":null,"type":{"typeDef":null,"name":null,"type":"ArrayType","elements":[{"type":"NameExpression","name":"TState","typeDef___NODE":null},{"type":"TypeApplication","expression":{"type":"NameExpression","name":"AsyncSetState","typeDef___NODE":null},"applications":[{"type":"NameExpression","name":"TState","typeDef___NODE":null}]}],"expression":null,"applications":null},"optional":false,"params":null,"properties":null,"returns":null,"members":null}],"properties":null,"optional":false,"returns":[{"name":null,"description":null,"optional":false,"type":{"name":null,"type":"ArrayType","elements":[{"type":"NameExpression","name":"TState","typeDef___NODE":null},{"type":"FunctionType","params":[{"type":"ParameterType","name":"stateUpdate","expression":{"type":"TypeApplication","expression":{"type":"NameExpression","name":"React.SetStateAction"},"applications":[{"type":"NameExpression","name":"TState"}]}}],"result":{"type":"TypeApplication","expression":{"type":"NameExpression","name":"Promise"},"applications":[{"type":"VoidLiteral"}]}}],"expression":null,"applications":null}}],"members":{"static":null}}]}},"pageContext":{"nodeId":"0ae9f163-ed25-50c8-a87d-becc90433a0a","exampleId":null}}}