{"componentChunkName":"component---node-modules-docpocalypse-gatsby-theme-src-templates-hook-tsx","path":"/api/useMergeState","result":{"data":{"docpocalypse":{"id":"5b2c607d-6f1e-58fc-bfa0-377b36853dc7","tsType":{"id":"173b66b2-8168-5ed8-9370-22315868924c","name":"useMergeState","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":"78bab32f-4e3c-54a6-9baa-ed4286a56587","name":"useMergeState","kind":4096,"kindString":"Call signature","flags":{"isExported":true},"comment":{"shortText":"Mimics a React class component's state model, of having a single unified\n`state` object and an updater that merges updates into the existing state, as\nopposed to replacing it.","text":"```js\nconst [state, setState] = useMergeState({ name: 'Betsy', age: 24 })\n\nsetState({ name: 'Johan' }) // { name: 'Johan', age: 24 }\n\nsetState(state => ({ age: state.age + 10 })) // { name: 'Johan', age: 34 }\n```\n"},"typeParameter":[{"id":"400de2bf-517f-5c0f-b871-b50c1f6987c6","name":"TState","kind":131072,"kindString":"Type parameter","flags":{"isExported":true},"type":{"type":"reflection","declaration":{"id":"194bb157-5fd2-52e6-bc92-c40afe0ad67a","name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExported":true},"parent":"7c982787-4e67-5aac-ac6f-f6e253a637eb","rootDir":"/Users/jquense/src/hooks/src","tsconfig":"/Users/jquense/src/hooks/tsconfig.json","typedocs":[],"signatures":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":"/Users/jquense/src/hooks/src/useMergeState.ts"}},"parent":"78bab32f-4e3c-54a6-9baa-ed4286a56587","rootDir":"/Users/jquense/src/hooks/src","tsconfig":"/Users/jquense/src/hooks/tsconfig.json","typedocs":[],"signatures":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":null}],"parameters":[{"id":"7c982787-4e67-5aac-ac6f-f6e253a637eb","name":"initialState","kind":32768,"kindString":"Parameter","flags":{"isExported":true},"comment":{"text":"The initial state object\n"},"type":{"type":"typeParameter","name":"TState","constraint":{"type":"reflection","declaration":{"kind":-1,"kindString":"CircularReference","id":"194bb157-5fd2-52e6-bc92-c40afe0ad67a","name":"__type"}}},"parent":"78bab32f-4e3c-54a6-9baa-ed4286a56587","rootDir":"/Users/jquense/src/hooks/src","tsconfig":"/Users/jquense/src/hooks/tsconfig.json","typedocs":[],"signatures":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":null,"description":{"id":"c6ccdf82-99b4-5640-a5df-da3664d09e49","parent":"7c982787-4e67-5aac-ac6f-f6e253a637eb","mdx":{"id":"bb9cf93c-4999-5566-ba45-36ec097c5848","parent":"c6ccdf82-99b4-5640-a5df-da3664d09e49","frontmatter":{"title":""},"exports":{},"rawBody":"The initial state object\n","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The initial state object\"));\n}\n;\nMDXContent.isMDXComponent = true;"},"markdownRemark":{"id":"5793064b-b39a-5bad-a6d0-a19331f73584","parent":"c6ccdf82-99b4-5640-a5df-da3664d09e49","frontmatter":{"title":""},"excerpt":"","rawMarkdownBody":"The initial state object\n","html":"<p>The initial state object</p>"}}}],"type":{"type":"tuple","elements":[{"type":"typeParameter","name":"TState","constraint":{"type":"reflection","declaration":{"id":"194bb157-5fd2-52e6-bc92-c40afe0ad67a","name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExported":true},"parent":"7c982787-4e67-5aac-ac6f-f6e253a637eb","rootDir":"/Users/jquense/src/hooks/src","tsconfig":"/Users/jquense/src/hooks/tsconfig.json","typedocs":[],"signatures":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":"/Users/jquense/src/hooks/src/useMergeState.ts"}}},{"type":"reference","id":645,"typeArguments":[{"type":"typeParameter","name":"TState","constraint":{"type":"reflection","declaration":{"kind":-1,"kindString":"CircularReference","id":"194bb157-5fd2-52e6-bc92-c40afe0ad67a","name":"__type"}}}],"name":"MergeStateSetter","reference":{"id":"bb7ed527-3905-5257-966e-76460f859299","name":"MergeStateSetter","kind":4194304,"kindString":"Type alias","flags":{"isExported":true},"comment":{"shortText":"Updates state, partial updates are merged into existing state values"},"typeParameter":[{"id":"3638c598-a4a3-5957-ac45-aed11f446a0c","name":"TState","kind":131072,"kindString":"Type parameter","flags":{"isExported":true},"parent":"bb7ed527-3905-5257-966e-76460f859299","rootDir":"/Users/jquense/src/hooks/src","tsconfig":"/Users/jquense/src/hooks/tsconfig.json","typedocs":[],"signatures":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":null}],"type":{"type":"reflection","declaration":{"id":"642e12b3-0bd7-5f47-8d28-1e33b349fe6d","name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExported":true},"signatures":[{"id":"fc1b0505-8bb5-5b60-830d-989e3d127bc6","name":"__call","kind":4096,"kindString":"Call signature","flags":{"isExported":true},"parameters":[{"id":"a4a468ce-85c1-57ef-89a7-2c998c6200d8","name":"update","kind":32768,"kindString":"Parameter","flags":{"isExported":true},"type":{"type":"union","types":[{"type":"reference","id":640,"typeArguments":[{"type":"typeParameter","name":"TState"}],"name":"Updater","reference":{"id":"8473a789-50ce-5183-b235-32f667970ddb","name":"Updater","kind":4194304,"kindString":"Type alias","flags":{},"typeParameter":[{"id":"09a8e216-4cd0-5ab7-8c0c-615f62f98a6a","name":"TState","kind":131072,"kindString":"Type parameter","flags":{},"parent":"8473a789-50ce-5183-b235-32f667970ddb","rootDir":"/Users/jquense/src/hooks/src","tsconfig":"/Users/jquense/src/hooks/tsconfig.json","typedocs":[],"signatures":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":null}],"type":{"type":"reflection","declaration":{"id":"df3c158d-eb66-538c-943a-5128550a2278","name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":"e22ef06a-85e8-5a2d-bf23-31e09313a9f7","name":"__call","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":"30a3f713-74e2-5ade-a11d-449aa0a8544b","name":"state","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"typeParameter","name":"TState"},"parent":"e22ef06a-85e8-5a2d-bf23-31e09313a9f7","rootDir":"/Users/jquense/src/hooks/src","tsconfig":"/Users/jquense/src/hooks/tsconfig.json","typedocs":[],"signatures":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":null}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"typeParameter","name":"TState"}],"name":"Partial"},{"type":"intrinsic","name":"null"}]},"parent":"df3c158d-eb66-538c-943a-5128550a2278","rootDir":"/Users/jquense/src/hooks/src","tsconfig":"/Users/jquense/src/hooks/tsconfig.json","typedocs":[],"signatures":[],"typeParameter":[],"groups":[],"absolutePath":"/Users/jquense/src/hooks/src/useMergeState.ts"}],"parent":"8473a789-50ce-5183-b235-32f667970ddb","rootDir":"/Users/jquense/src/hooks/src","tsconfig":"/Users/jquense/src/hooks/tsconfig.json","typedocs":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":"/Users/jquense/src/hooks/src/useMergeState.ts"}},"parent":"4700bed7-fc96-50a4-a503-75e13334a672","rootDir":"/Users/jquense/src/hooks/src","tsconfig":"/Users/jquense/src/hooks/tsconfig.json","typedocs":[],"signatures":[],"parameters":[],"groups":[],"absolutePath":"/Users/jquense/src/hooks/src/useMergeState.ts"}},{"type":"reference","typeArguments":[{"type":"typeParameter","name":"TState"}],"name":"Partial"},{"type":"intrinsic","name":"null"}]},"parent":"fc1b0505-8bb5-5b60-830d-989e3d127bc6","rootDir":"/Users/jquense/src/hooks/src","tsconfig":"/Users/jquense/src/hooks/tsconfig.json","typedocs":[],"signatures":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":null}],"type":{"type":"intrinsic","name":"void"},"parent":"642e12b3-0bd7-5f47-8d28-1e33b349fe6d","rootDir":"/Users/jquense/src/hooks/src","tsconfig":"/Users/jquense/src/hooks/tsconfig.json","typedocs":[],"signatures":[],"typeParameter":[],"groups":[],"absolutePath":"/Users/jquense/src/hooks/src/useMergeState.ts"}],"parent":"bb7ed527-3905-5257-966e-76460f859299","rootDir":"/Users/jquense/src/hooks/src","tsconfig":"/Users/jquense/src/hooks/tsconfig.json","typedocs":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":"/Users/jquense/src/hooks/src/useMergeState.ts"}},"parent":"4700bed7-fc96-50a4-a503-75e13334a672","rootDir":"/Users/jquense/src/hooks/src","tsconfig":"/Users/jquense/src/hooks/tsconfig.json","typedocs":[],"signatures":[],"parameters":[],"groups":[],"absolutePath":"/Users/jquense/src/hooks/src/useMergeState.ts","description":{"id":"f572bfde-4eb6-5972-91f1-740bf63e9883","parent":"bb7ed527-3905-5257-966e-76460f859299","mdx":{"id":"f8eab0ec-2ce1-5bbb-b5f0-90b08b2be78e","parent":"f572bfde-4eb6-5972-91f1-740bf63e9883","frontmatter":{"title":""},"exports":{},"rawBody":"Updates state, partial updates are merged into existing state values","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Updates state, partial updates are merged into existing state values\"));\n}\n;\nMDXContent.isMDXComponent = true;"},"markdownRemark":{"id":"9ec73ce5-5df2-5ccd-af96-fb76eff3cb95","parent":"f572bfde-4eb6-5972-91f1-740bf63e9883","frontmatter":{"title":""},"excerpt":"","rawMarkdownBody":"Updates state, partial updates are merged into existing state values","html":"<p>Updates state, partial updates are merged into existing state values</p>"}}}}]},"parent":"173b66b2-8168-5ed8-9370-22315868924c","rootDir":"/Users/jquense/src/hooks/src","tsconfig":"/Users/jquense/src/hooks/tsconfig.json","typedocs":[],"signatures":[],"groups":[],"absolutePath":"/Users/jquense/src/hooks/src/useMergeState.ts","description":{"id":"ed64b5a6-4fc4-56da-8767-5b99a2887897","parent":"78bab32f-4e3c-54a6-9baa-ed4286a56587","mdx":{"id":"508cffdd-d363-50fe-8b44-4e07c22f05d2","parent":"ed64b5a6-4fc4-56da-8767-5b99a2887897","frontmatter":{"title":""},"exports":{},"rawBody":"Mimics a React class component's state model, of having a single unified\n`state` object and an updater that merges updates into the existing state, as\nopposed to replacing it.\n```js\nconst [state, setState] = useMergeState({ name: 'Betsy', age: 24 })\n\nsetState({ name: 'Johan' }) // { name: 'Johan', age: 24 }\n\nsetState(state => ({ age: state.age + 10 })) // { name: 'Johan', age: 34 }\n```\n","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Mimics a React class component's state model, of having a single unified\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"state\"), \" object and an updater that merges updates into the existing state, as\\nopposed to replacing it.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"const [state, setState] = useMergeState({ name: 'Betsy', age: 24 })\\n\\nsetState({ name: 'Johan' }) // { name: 'Johan', age: 24 }\\n\\nsetState(state => ({ age: state.age + 10 })) // { name: 'Johan', age: 34 }\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"},"markdownRemark":{"id":"360253fa-f8ad-505b-a84f-519a98737829","parent":"ed64b5a6-4fc4-56da-8767-5b99a2887897","frontmatter":{"title":""},"excerpt":"","rawMarkdownBody":"Mimics a React class component's state model, of having a single unified\n`state` object and an updater that merges updates into the existing state, as\nopposed to replacing it.\n```js\nconst [state, setState] = useMergeState({ name: 'Betsy', age: 24 })\n\nsetState({ name: 'Johan' }) // { name: 'Johan', age: 24 }\n\nsetState(state => ({ age: state.age + 10 })) // { name: 'Johan', age: 34 }\n```\n","html":"<p>Mimics a React class component's state model, of having a single unified\n<code>state</code> object and an updater that merges updates into the existing state, as\nopposed to replacing it.</p>\n<pre><code class=\"language-js\">const [state, setState] = useMergeState({ name: 'Betsy', age: 24 })\n\nsetState({ name: 'Johan' }) // { name: 'Johan', age: 24 }\n\nsetState(state => ({ age: state.age + 10 })) // { name: 'Johan', age: 34 }\n</code></pre>"}}}],"parent":"4700bed7-fc96-50a4-a503-75e13334a672","rootDir":"/Users/jquense/src/hooks/src","tsconfig":"/Users/jquense/src/hooks/tsconfig.json","typedocs":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":"/Users/jquense/src/hooks/src/useMergeState.ts"},"type":"hook","name":"useMergeState","packageName":"@restart/hooks","importName":"import useMergeState from '@restart/hooks/useMergeState'","tags":[{"name":"param","value":"The initial state object"}],"example":null,"signatures":[{"kind":"function","name":"useMergeState","description":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Mimics a React class component's state model, of having a single unified\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"state\"), \" object and an updater that merges updates into the existing state, as\\nopposed to replacing it.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"const [state, setState] = useMergeState({ name: 'Betsy', age: 24 })\\n\\nsetState({ name: 'Johan' }) // { name: 'Johan', age: 24 }\\n\\nsetState(state => ({ age: state.age + 10 })) // { name: 'Johan', age: 34 }\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"examples":[],"type":null,"params":[{"name":"initialState","description":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The initial state object\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"examples":null,"type":{"typeDef":null,"name":"TState","type":"NameExpression","elements":null,"expression":null,"applications":null},"optional":false,"params":null,"properties":null,"returns":null,"members":null}],"properties":null,"optional":false,"returns":[{"name":null,"description":null,"optional":false,"type":{"name":null,"type":"ArrayType","elements":[{"type":"NameExpression","name":"TState","typeDef___NODE":null},{"type":"TypeApplication","expression":{"type":"NameExpression","name":"MergeStateSetter","typeDef___NODE":"efcabcab-f1e9-5afc-b843-8fb0825bfbb7","typeDef":{"commentNumber":0,"level":0,"id":"efcabcab-f1e9-5afc-b843-8fb0825bfbb7","parent":"99ed3c09-ebdc-50c2-b8cf-ade97cedcd33","children":["25fa50cc-962b-5184-be82-edb409978d7c"],"internal":{"type":"DocumentationJs","contentDigest":"b2f3953df0b1ec89ec55b1d90127cd13","counter":1132,"owner":"gatsby-transformer-documentationjs"},"kind":"typedef","name":"MergeStateSetter","type":{"type":"FunctionType","params":[{"type":"ParameterType","name":"update","expression":{"type":"UnionType","elements":[{"type":"TypeApplication","expression":{"type":"NameExpression","name":"Updater"},"applications":[{"type":"NameExpression","name":"TState"}]},{"type":"TypeApplication","expression":{"type":"NameExpression","name":"Partial"},"applications":[{"type":"NameExpression","name":"TState"}]},{"type":"NullLiteral"}]}}],"result":{"type":"VoidLiteral"}},"examples":[],"tags":[],"optional":false,"docsLocation":{"start":{"line":5,"column":0},"end":{"line":7,"column":3}},"codeLocation":{"start":{"line":8,"column":0},"end":{"line":10,"column":9}},"description___NODE":"25fa50cc-962b-5184-be82-edb409978d7c","members":{}}},"applications":[{"type":"NameExpression","name":"TState","typeDef___NODE":null}]}],"expression":null,"applications":null}}],"members":{"static":null}}]}},"pageContext":{"nodeId":"5b2c607d-6f1e-58fc-bfa0-377b36853dc7","exampleId":null}}}