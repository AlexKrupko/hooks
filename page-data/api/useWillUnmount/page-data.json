{"componentChunkName":"component---node-modules-docpocalypse-gatsby-theme-src-templates-hook-tsx","path":"/api/useWillUnmount","result":{"data":{"docpocalypse":{"id":"8b5c26fc-8764-5680-940b-6d76abd2466a","tsType":{"id":"83ced57d-9818-5230-aa60-087244c814e5","name":"useWillUnmount","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":"313dea77-4262-50b8-b23a-f60604b0a65a","name":"useWillUnmount","kind":4096,"kindString":"Call signature","flags":{"isExported":true},"comment":{"shortText":"Attach a callback that fires when a component unmounts"},"parameters":[{"id":"916e1fe1-9f1d-5386-a3f4-9982da8ac2e3","name":"fn","kind":32768,"kindString":"Parameter","flags":{"isExported":true},"comment":{"text":"Handler to run when the component unmounts"},"type":{"type":"reflection","declaration":{"id":"920ad254-cf35-5d5c-bb63-39c42d8328f4","name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExported":true},"signatures":[{"id":"6bc73f18-f78a-5e0b-8fb9-39758055b5e9","name":"__call","kind":4096,"kindString":"Call signature","flags":{"isExported":true},"type":{"type":"intrinsic","name":"void"},"parent":"920ad254-cf35-5d5c-bb63-39c42d8328f4","rootDir":"/Users/jquense/src/hooks/src","tsconfig":"/Users/jquense/src/hooks/tsconfig.json","typedocs":[],"signatures":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":"/Users/jquense/src/hooks/src/useWillUnmount.ts"}],"parent":"916e1fe1-9f1d-5386-a3f4-9982da8ac2e3","rootDir":"/Users/jquense/src/hooks/src","tsconfig":"/Users/jquense/src/hooks/tsconfig.json","typedocs":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":"/Users/jquense/src/hooks/src/useWillUnmount.ts"}},"parent":"313dea77-4262-50b8-b23a-f60604b0a65a","rootDir":"/Users/jquense/src/hooks/src","tsconfig":"/Users/jquense/src/hooks/tsconfig.json","typedocs":[],"signatures":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":null,"description":{"id":"6cd91aa9-acf1-58e2-90f7-0c1ef2213877","parent":"916e1fe1-9f1d-5386-a3f4-9982da8ac2e3","mdx":{"id":"a684e72b-42e0-5194-a04a-ba3064e70c10","parent":"6cd91aa9-acf1-58e2-90f7-0c1ef2213877","frontmatter":{"title":""},"exports":{},"rawBody":"Handler to run when the component unmounts","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Handler to run when the component unmounts\"));\n}\n;\nMDXContent.isMDXComponent = true;"},"markdownRemark":{"id":"ed3e2c6c-0207-56cd-861c-0614eaab77e7","parent":"6cd91aa9-acf1-58e2-90f7-0c1ef2213877","frontmatter":{"title":""},"excerpt":"","rawMarkdownBody":"Handler to run when the component unmounts","html":"<p>Handler to run when the component unmounts</p>"}}}],"type":{"type":"intrinsic","name":"void"},"parent":"83ced57d-9818-5230-aa60-087244c814e5","rootDir":"/Users/jquense/src/hooks/src","tsconfig":"/Users/jquense/src/hooks/tsconfig.json","typedocs":[],"signatures":[],"typeParameter":[],"groups":[],"absolutePath":"/Users/jquense/src/hooks/src/useWillUnmount.ts","description":{"id":"579fa007-49f2-5f8d-a1be-0a0ac1054f6c","parent":"313dea77-4262-50b8-b23a-f60604b0a65a","mdx":{"id":"ad9759bf-fc06-55df-93a8-0b8c5ae00583","parent":"579fa007-49f2-5f8d-a1be-0a0ac1054f6c","frontmatter":{"title":""},"exports":{},"rawBody":"Attach a callback that fires when a component unmounts","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Attach a callback that fires when a component unmounts\"));\n}\n;\nMDXContent.isMDXComponent = true;"},"markdownRemark":{"id":"9022f210-56a8-5458-b17c-4a541922357e","parent":"579fa007-49f2-5f8d-a1be-0a0ac1054f6c","frontmatter":{"title":""},"excerpt":"","rawMarkdownBody":"Attach a callback that fires when a component unmounts","html":"<p>Attach a callback that fires when a component unmounts</p>"}}}],"parent":"877e7b15-a76f-5dbc-ba3b-687db25d2c55","rootDir":"/Users/jquense/src/hooks/src","tsconfig":"/Users/jquense/src/hooks/tsconfig.json","typedocs":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":"/Users/jquense/src/hooks/src/useWillUnmount.ts"},"type":"hook","name":"useWillUnmount","packageName":"@restart/hooks","importName":"import useWillUnmount from '@restart/hooks/useWillUnmount'","tags":[{"name":"param","value":"Handler to run when the component unmounts"},{"name":"category","value":"effects"}],"example":null,"signatures":[{"kind":"function","name":"useWillUnmount","description":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Attach a callback that fires when a component unmounts\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"examples":[],"type":null,"params":[{"name":"fn","description":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Handler to run when the component unmounts\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"examples":null,"type":{"typeDef":null,"name":null,"type":"FunctionType","elements":null,"expression":null,"applications":null},"optional":false,"params":null,"properties":null,"returns":null,"members":null}],"properties":null,"optional":false,"returns":null,"members":{"static":null}}]}},"pageContext":{"nodeId":"8b5c26fc-8764-5680-940b-6d76abd2466a","exampleId":null}}}